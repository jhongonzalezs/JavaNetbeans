/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package suma_de_matrices;

import javax.swing.JOptionPane;

/**
 *
 * @author Asus X505B
 */
public class Config extends javax.swing.JFrame {

    /**
     * Creates new form Config
     */
    public Config() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        MatrizC = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Filas = new javax.swing.JTextField();
        Columnas = new javax.swing.JTextField();
        Matriz = new javax.swing.JButton();
        Operacion = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 255, 255));

        jPanel1.setBackground(new java.awt.Color(51, 255, 204));

        jLabel3.setFont(new java.awt.Font("Algerian", 0, 18)); // NOI18N
        jLabel3.setText("Suma De Matrices");

        MatrizC.setColumns(20);
        MatrizC.setRows(5);
        jScrollPane1.setViewportView(MatrizC);

        jLabel4.setText("Nota: recuerde que para realizar las operaciones de matrices ambas deben");

        jPanel2.setName("Datos De Las Matrices"); // NOI18N

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setText("C. Columnas De Las Matrices   --->");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("C. Filas De Las Matrices  --->");

        Matriz.setBackground(new java.awt.Color(204, 255, 204));
        Matriz.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Matriz.setText("Crear Martrices");
        Matriz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MatrizActionPerformed(evt);
            }
        });

        Operacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Suma (+)", "Resta (-)", "Multiplicacion (x)", "Division (รท)", "Todas Las Opciones" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(Filas))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Columnas, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(Operacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Matriz, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Filas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Columnas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Matriz, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Operacion, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel5.setText(" tener la misma dimensionalidad, por eso se tomaran la cantidad de");

        jLabel6.setText(" filas y columnas para amabs matrices");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MatrizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MatrizActionPerformed

        int filas, columnas, f, c, operac;

        filas = 0;
        columnas = 0;

        filas = Integer.parseInt(Filas.getText());
        columnas = Integer.parseInt(Columnas.getText());
        operac = Operacion.getSelectedIndex();

        int Matriz[][];
        int Matriz2[][];
        int Suma[][];
        int Rest[][];
        int divi[][];
        int Multi[][];
        Matriz = new int[filas][columnas];
        Matriz2 = new int[filas][columnas];

        JOptionPane.showMessageDialog(null, "Relleno Los Valores De La Primera Matriz");
        for (f = 0; f < filas; f++) {
            for (c = 0; c < columnas; c++) {
                int num = Integer.parseInt(JOptionPane.showInputDialog("Digite El Valor De La Fila " + (f + 1) + " Columna " + (c + 1)));
                Matriz[f][c] = num;
            }
        }

        JOptionPane.showMessageDialog(null, "Relleno Los Valores De La Segunda Matriz");

        for (f = 0; f < filas; f++) {
            for (c = 0; c < columnas; c++) {
                int num = Integer.parseInt(JOptionPane.showInputDialog("Digite El Valor De La Fila " + (f + 1) + " Columna " + (c + 1)));
                Matriz2[f][c] = num;
            }
        }
        MatrizC.setText("");
        MatrizC.append("Matriz Numero 1");
        MatrizC.append("\n");
        MatrizC.append("\n");
        for (f = 0; f < filas; f++) {
            for (c = 0; c < columnas; c++) {
                MatrizC.append(" " + Matriz[f][c] + " ");
            }
            MatrizC.append("\n");
        }

        MatrizC.append("\n");
        MatrizC.append("\n");

        MatrizC.append("Matriz Numero 2");
        MatrizC.append("\n");
        MatrizC.append("\n");
        for (f = 0; f < filas; f++) {
            for (c = 0; c < columnas; c++) {
                MatrizC.append(" " + Matriz2[f][c] + " ");
            }
            MatrizC.append("\n");
        }

        MatrizC.append("\n");
        MatrizC.append("\n");

        switch (operac) {
            case 0:
                MatrizC.append("Suma De Las Matriz 1 y 2");
                MatrizC.append("\n");
                MatrizC.append("\n");
                for (f = 0; f < filas; f++) {
                    for (c = 0; c < columnas; c++) {
                        Suma = new int[filas][columnas];
                        Suma[f][c] = Matriz[f][c] + Matriz2[f][c];
                        MatrizC.append(" " + Suma[f][c] + " ");
                    }
                    MatrizC.append("\n");
                }
                break;
            case 1:
                MatrizC.append("Resta De Las Matriz 1 y 2");
                MatrizC.append("\n");
                MatrizC.append("\n");
                for (f = 0; f < filas; f++) {
                    for (c = 0; c < columnas; c++) {
                        Rest = new int[filas][columnas];
                        Rest[f][c] = Matriz[f][c] - Matriz2[f][c];
                        MatrizC.append(" " + Rest[f][c] + " ");
                    }
                    MatrizC.append("\n");
                }
                break;
            case 2:
                MatrizC.append("Multiplicacion De Las Matriz 1 y 2");
                MatrizC.append("\n");
                MatrizC.append("\n");
                for (f = 0; f < filas; f++) {
                    for (c = 0; c < columnas; c++) {
                        Multi = new int[filas][columnas];
                        Multi[f][c] = Matriz[f][c] * Matriz2[f][c];
                        MatrizC.append(" " + Multi[f][c] + " ");
                    }
                    MatrizC.append("\n");
                }
                break;
            case 3:
                MatrizC.append("Division De Las Matriz 1 y 2");
                MatrizC.append("\n");
                MatrizC.append("\n");
                for (f = 0; f < filas; f++) {
                    for (c = 0; c < columnas; c++) {
                        divi = new int[filas][columnas];
                        divi[f][c] = Matriz[f][c] / Matriz2[f][c];
                        MatrizC.append(" " + divi[f][c] + " ");
                    }
                    MatrizC.append("\n");
                }
                break;
            case 4:
                MatrizC.append("Suma De Las Matriz 1 y 2");
                MatrizC.append("\n");
                MatrizC.append("\n");
                for (f = 0; f < filas; f++) {
                    for (c = 0; c < columnas; c++) {
                        Suma = new int[filas][columnas];
                        Suma[f][c] = Matriz[f][c] + Matriz2[f][c];
                        MatrizC.append(" " + Suma[f][c] + " ");
                    }
                    MatrizC.append("\n");
                }
                MatrizC.append("\n");
                MatrizC.append("Resta De Las Matriz 1 y 2");
                MatrizC.append("\n");
                MatrizC.append("\n");
                for (f = 0; f < filas; f++) {
                    for (c = 0; c < columnas; c++) {
                        Rest = new int[filas][columnas];
                        Rest[f][c] = Matriz[f][c] - Matriz2[f][c];
                        MatrizC.append(" " + Rest[f][c] + " ");
                    }
                    MatrizC.append("\n");
                }
                MatrizC.append("\n");
                MatrizC.append("Multiplicacion De Las Matriz 1 y 2");
                MatrizC.append("\n");
                MatrizC.append("\n");
                for (f = 0; f < filas; f++) {
                    for (c = 0; c < columnas; c++) {
                        Multi = new int[filas][columnas];
                        Multi[f][c] = Matriz[f][c] * Matriz2[f][c];
                        MatrizC.append(" " + Multi[f][c] + " ");
                    }
                    MatrizC.append("\n");
                }
                MatrizC.append("\n");
                MatrizC.append("Division De Las Matriz 1 y 2");
                MatrizC.append("\n");
                MatrizC.append("\n");
                for (f = 0; f < filas; f++) {
                    for (c = 0; c < columnas; c++) {
                        divi = new int[filas][columnas];
                        divi[f][c] = Matriz[f][c] / Matriz2[f][c];
                        MatrizC.append(" " + divi[f][c] + " ");
                    }
                    MatrizC.append("\n");
                }
                break;
            default:
                JOptionPane.showMessageDialog(this, "Esa Opcion no existe");
                break;
        }

    }//GEN-LAST:event_MatrizActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Config.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Config.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Config.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Config.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Config().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Columnas;
    private javax.swing.JTextField Filas;
    private javax.swing.JButton Matriz;
    private javax.swing.JTextArea MatrizC;
    private javax.swing.JComboBox<String> Operacion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
