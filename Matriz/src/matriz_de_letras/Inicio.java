/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package matriz_de_letras;

import java.awt.Color;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Asus X505B
 */
public class Inicio extends javax.swing.JFrame {

    /**
     * Creates new form Inicio
     */
    public Inicio() {
        initComponents();
        this.setResizable(false);
        setIconImage(new ImageIcon(getClass().getResource("../img/logo.png")).getImage());
        this.setLocationRelativeTo(this);
        this.setTitle("Matriz De Letras");
    }

    String Matriz[][] = new String[10][10];

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        Letras2 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        Crear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel4.setBackground(new java.awt.Color(0, 204, 204));

        jPanel2.setBackground(new java.awt.Color(0, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        Letras2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione Una Letra", "Nn", "c", "o", "z", "L", "U", "x" }));

        jLabel3.setBackground(new java.awt.Color(204, 255, 255));
        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("Seleccione Una Letra");

        Crear.setBackground(new java.awt.Color(204, 255, 255));
        Crear.setText("Crear Letra");
        Crear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Letras2, 0, 177, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(Crear, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Letras2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Crear, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrearActionPerformed

        String Letra;
        Letra = Letras2.getSelectedItem().toString();

        DefaultTableModel Tabla1 = new DefaultTableModel(10, 10);
        jTable1.setModel(Tabla1);
        
        
        
        for (int i = 0; i < Matriz.length; i++) {
                for (int j = 0; j < Matriz.length; j++) {
                    Matriz[i][j]=" ";
                }
            }
        
        
        //Letra C
        if (Letra.equals("c")) {
            for (int i = 0; i < Matriz.length; i++) {
                for (int j = 0; j < Matriz[0].length; j++) {
                    if (i == 0 || i == (Matriz.length - 1) || j == 0) {
                        Matriz[i][j] = "1";
                    } else {
                        Matriz[i][j] = " ";
                    }
                }
            }

            for (int i = 0; i < Matriz.length; i++) {
                for (int j = 0; j < Matriz[0].length; j++) {
                    jTable1.setValueAt(Matriz[i][j], i, j);
                }
            }

        }
        //Letra O
        if (Letra.equals("o")) {
            for (int i = 0; i < Matriz.length; i++) {
                for (int j = 0; j < Matriz[0].length; j++) {
                    if (i == 0 || i == (Matriz.length - 1) || j == 0 || j == (Matriz[0].length - 1)) {
                        Matriz[i][j] = "1";
                    } else {
                        Matriz[i][j] = " ";
                    }
                }
            }

            for (int i = 0; i < Matriz.length; i++) {
                for (int j = 0; j < Matriz[0].length; j++) {
                    jTable1.setValueAt(Matriz[i][j], i, j);
                }
            }

        }
        //Letra X
        if (Letra.equals("x")) {
            String[] diagonalP = new String[Matriz.length];
            String[] diagonalS = new String[Matriz.length];

            for (int i = 0; i < Matriz.length; i++) {
                for (int j = 0; j < Matriz[i].length; j++) {
                    if (i == j) {
                        diagonalP[i] = "1";
                        Matriz[i][j] = diagonalP[i];
                    } else if (i + j == Matriz.length - 1) {
                        diagonalS[i] = "1";
                        Matriz[i][j] = diagonalS[i];
                    }
                }
            }

            for (int i = 0; i < Matriz.length; i++) {
                for (int j = 0; j < Matriz[i].length; j++) {
                    jTable1.setValueAt(Matriz[i][j], i, j);
                }
            }

        }

        if (Letra.equals("Nn")) {
            int op = Integer.parseInt(JOptionPane.showInputDialog("Seleccione La Opcion a Imprimir \n 1. N \n 2. n"));

            //Letra N
            switch (op) {
                case 1:
                    String[] diagonalP = new String[Matriz.length];
                    //generacion de la matriz
                    for (int i = 0; i < Matriz.length; i++) {
                        for (int j = 0; j < Matriz[i].length; j++) {
                            if (j == 0 || j == (Matriz[0].length - 1)) {
                                Matriz[i][j] = "1";
                            } else if (i == j) {
                                diagonalP[i] = "1";
                                Matriz[i][j] = diagonalP[i];
                            } else {
                                Matriz[i][j] = " ";
                            }

                        }

                    }   // escritura en jTable de la matriz
                    for (int i = 0; i < Matriz.length; i++) {
                        for (int j = 0; j < Matriz[i].length; j++) {
                            jTable1.setValueAt(Matriz[i][j], i, j);
                        }
                    }
                    break;
                case 2:
                    //generacion de la matriz
                    for (int i = 0; i < Matriz.length; i++) {
                        for (int j = 0; j < Matriz[0].length; j++) {

                            if (i == 0 || j == 0 || j == (Matriz[0].length - 1)) {
                                Matriz[i][j] = "1";
                            } else {
                                Matriz[i][j] = " ";
                            }
                        }

                    }       // escritura en jTable de la matriz
                    for (int i = 0; i < Matriz.length; i++) {
                        for (int j = 0; j < Matriz[0].length; j++) {
                            jTable1.setValueAt(Matriz[i][j], i, j);

                        }

                    }
                    break;
                default:
                    JOptionPane.showMessageDialog(null, "Esa Opcion no existe");
                    break;
            }

        }

        if (Letra.equals("L")) {

            //generacion de la matriz
            for (int i = 0; i < Matriz.length; i++) {
                for (int j = 0; j < Matriz[0].length; j++) {

                    if (j == 0 || i == (Matriz.length - 1)) {
                        Matriz[i][j] = "1";
                    } else {
                        Matriz[i][j] = " ";
                    }
                }

            }
            // escritura en jTable de la matriz
            for (int i = 0; i < Matriz.length; i++) {
                for (int j = 0; j < Matriz[0].length; j++) {
                    jTable1.setValueAt(Matriz[i][j], i, j);

                }

            }
        }

        if (Letra.equals("U")) {

            //generacion de la matriz
            for (int i = 0; i < Matriz.length; i++) {
                for (int j = 0; j < Matriz[0].length; j++) {

                    if (i == 9 || j == 0 || j == (Matriz[0].length - 1)) {
                        Matriz[i][j] = "1";
                    } else {
                        Matriz[i][j] = " ";
                    }
                }

            }
            // escritura en jTable de la matriz
            for (int i = 0; i < Matriz.length; i++) {
                for (int j = 0; j < Matriz[0].length; j++) {
                    jTable1.setValueAt(Matriz[i][j], i, j);

                }

            }
        }
        
        if (Letra.equals("z")) {
            String[] diagonalS = new String[Matriz.length];
            //generacion de la matriz
            for (int i = 0; i < Matriz.length; i++) {
                for (int j = 0; j < Matriz[0].length; j++) {

                    if (i == 0) {
                        Matriz[i][j] = "1";
                    } else if(i == 9) {
                        Matriz[i][j] = "1";
                    }else if (i + j == Matriz.length - 1) {
                                diagonalS[i] = "1";
                                Matriz[i][j] = diagonalS[i];
                            } else {
                                Matriz[i][j] = " ";
                            }
                }

            }
            // escritura en jTable de la matriz
            for (int i = 0; i < Matriz.length; i++) {
                for (int j = 0; j < Matriz[0].length; j++) {
                    jTable1.setValueAt(Matriz[i][j], i, j);

                }

            }
        }


    }//GEN-LAST:event_CrearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inicio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Crear;
    private javax.swing.JComboBox<String> Letras;
    private javax.swing.JComboBox<String> Letras1;
    private javax.swing.JComboBox<String> Letras2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
